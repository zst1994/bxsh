// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutter_bxsh/model/home_page_content_entity.dart';
import 'package:flutter_bxsh/generated/json/home_page_content_entity_helper.dart';
import 'package:flutter_bxsh/model/on_launch_mini_entity.dart';
import 'package:flutter_bxsh/generated/json/on_launch_mini_entity_helper.dart';
import 'package:flutter_bxsh/model/basic_picture_orders_sum_fsize_entity.dart';
import 'package:flutter_bxsh/generated/json/basic_picture_orders_sum_fsize_entity_helper.dart';
import 'package:flutter_bxsh/model/base_entity.dart';
import 'package:flutter_bxsh/generated/json/base_entity_helper.dart';
import 'package:flutter_bxsh/model/home_page_below_conten_entity.dart';
import 'package:flutter_bxsh/generated/json/home_page_below_conten_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {
			case HomePageContentEntity:
				return homePageContentEntityFromJson(data as HomePageContentEntity, json) as T;
			case HomePageContentSlides:
				return homePageContentSlidesFromJson(data as HomePageContentSlides, json) as T;
			case HomePageContentShopInfo:
				return homePageContentShopInfoFromJson(data as HomePageContentShopInfo, json) as T;
			case HomePageContentIntegralMallPic:
				return homePageContentIntegralMallPicFromJson(data as HomePageContentIntegralMallPic, json) as T;
			case HomePageContentToShareCode:
				return homePageContentToShareCodeFromJson(data as HomePageContentToShareCode, json) as T;
			case HomePageContentRecommend:
				return homePageContentRecommendFromJson(data as HomePageContentRecommend, json) as T;
			case HomePageContentAdvertesPicture:
				return homePageContentAdvertesPictureFromJson(data as HomePageContentAdvertesPicture, json) as T;
			case HomePageContentFloor1:
				return homePageContentFloor1FromJson(data as HomePageContentFloor1, json) as T;
			case HomePageContentFloor2:
				return homePageContentFloor2FromJson(data as HomePageContentFloor2, json) as T;
			case HomePageContentFloor3:
				return homePageContentFloor3FromJson(data as HomePageContentFloor3, json) as T;
			case HomePageContentSaoma:
				return homePageContentSaomaFromJson(data as HomePageContentSaoma, json) as T;
			case HomePageContentNewUser:
				return homePageContentNewUserFromJson(data as HomePageContentNewUser, json) as T;
			case HomePageContentFloor1Pic:
				return homePageContentFloor1PicFromJson(data as HomePageContentFloor1Pic, json) as T;
			case HomePageContentFloor2Pic:
				return homePageContentFloor2PicFromJson(data as HomePageContentFloor2Pic, json) as T;
			case HomePageContentFloorName:
				return homePageContentFloorNameFromJson(data as HomePageContentFloorName, json) as T;
			case HomePageContentCategory:
				return homePageContentCategoryFromJson(data as HomePageContentCategory, json) as T;
			case HomePageContentCategoryBxMallSubDto:
				return homePageContentCategoryBxMallSubDtoFromJson(data as HomePageContentCategoryBxMallSubDto, json) as T;
			case HomePageContentFloor3Pic:
				return homePageContentFloor3PicFromJson(data as HomePageContentFloor3Pic, json) as T;
			case OnLaunchMiniEntity:
				return onLaunchMiniEntityFromJson(data as OnLaunchMiniEntity, json) as T;
			case OnLaunchMiniSharePic:
				return onLaunchMiniSharePicFromJson(data as OnLaunchMiniSharePic, json) as T;
			case OnLaunchMiniSendFee:
				return onLaunchMiniSendFeeFromJson(data as OnLaunchMiniSendFee, json) as T;
			case BasicPictureOrdersSumFsizeEntity:
				return basicPictureOrdersSumFsizeEntityFromJson(data as BasicPictureOrdersSumFsizeEntity, json) as T;
			case BaseBean:
				return baseBeanFromJson<T>(data as BaseBean, json) as T;
			case HomePageBelowContenEntity:
				return homePageBelowContenEntityFromJson(data as HomePageBelowContenEntity, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {
			case HomePageContentEntity:
				return homePageContentEntityToJson(data as HomePageContentEntity);
			case HomePageContentSlides:
				return homePageContentSlidesToJson(data as HomePageContentSlides);
			case HomePageContentShopInfo:
				return homePageContentShopInfoToJson(data as HomePageContentShopInfo);
			case HomePageContentIntegralMallPic:
				return homePageContentIntegralMallPicToJson(data as HomePageContentIntegralMallPic);
			case HomePageContentToShareCode:
				return homePageContentToShareCodeToJson(data as HomePageContentToShareCode);
			case HomePageContentRecommend:
				return homePageContentRecommendToJson(data as HomePageContentRecommend);
			case HomePageContentAdvertesPicture:
				return homePageContentAdvertesPictureToJson(data as HomePageContentAdvertesPicture);
			case HomePageContentFloor1:
				return homePageContentFloor1ToJson(data as HomePageContentFloor1);
			case HomePageContentFloor2:
				return homePageContentFloor2ToJson(data as HomePageContentFloor2);
			case HomePageContentFloor3:
				return homePageContentFloor3ToJson(data as HomePageContentFloor3);
			case HomePageContentSaoma:
				return homePageContentSaomaToJson(data as HomePageContentSaoma);
			case HomePageContentNewUser:
				return homePageContentNewUserToJson(data as HomePageContentNewUser);
			case HomePageContentFloor1Pic:
				return homePageContentFloor1PicToJson(data as HomePageContentFloor1Pic);
			case HomePageContentFloor2Pic:
				return homePageContentFloor2PicToJson(data as HomePageContentFloor2Pic);
			case HomePageContentFloorName:
				return homePageContentFloorNameToJson(data as HomePageContentFloorName);
			case HomePageContentCategory:
				return homePageContentCategoryToJson(data as HomePageContentCategory);
			case HomePageContentCategoryBxMallSubDto:
				return homePageContentCategoryBxMallSubDtoToJson(data as HomePageContentCategoryBxMallSubDto);
			case HomePageContentFloor3Pic:
				return homePageContentFloor3PicToJson(data as HomePageContentFloor3Pic);
			case OnLaunchMiniEntity:
				return onLaunchMiniEntityToJson(data as OnLaunchMiniEntity);
			case OnLaunchMiniSharePic:
				return onLaunchMiniSharePicToJson(data as OnLaunchMiniSharePic);
			case OnLaunchMiniSendFee:
				return onLaunchMiniSendFeeToJson(data as OnLaunchMiniSendFee);
			case BasicPictureOrdersSumFsizeEntity:
				return basicPictureOrdersSumFsizeEntityToJson(data as BasicPictureOrdersSumFsizeEntity);
			case BaseBean:
				return baseBeanToJson(data as BaseBean);
			case HomePageBelowContenEntity:
				return homePageBelowContenEntityToJson(data as HomePageBelowContenEntity);
			}
			return data as T;
		}
  //Go back to a single instance by type
	static _fromJsonSingle<M>( json) {
		String type = M.toString();
		if(type == (HomePageContentEntity).toString()){
			return HomePageContentEntity().fromJson(json);
		}	else if(type == (HomePageContentSlides).toString()){
			return HomePageContentSlides().fromJson(json);
		}	else if(type == (HomePageContentShopInfo).toString()){
			return HomePageContentShopInfo().fromJson(json);
		}	else if(type == (HomePageContentIntegralMallPic).toString()){
			return HomePageContentIntegralMallPic().fromJson(json);
		}	else if(type == (HomePageContentToShareCode).toString()){
			return HomePageContentToShareCode().fromJson(json);
		}	else if(type == (HomePageContentRecommend).toString()){
			return HomePageContentRecommend().fromJson(json);
		}	else if(type == (HomePageContentAdvertesPicture).toString()){
			return HomePageContentAdvertesPicture().fromJson(json);
		}	else if(type == (HomePageContentFloor1).toString()){
			return HomePageContentFloor1().fromJson(json);
		}	else if(type == (HomePageContentFloor2).toString()){
			return HomePageContentFloor2().fromJson(json);
		}	else if(type == (HomePageContentFloor3).toString()){
			return HomePageContentFloor3().fromJson(json);
		}	else if(type == (HomePageContentSaoma).toString()){
			return HomePageContentSaoma().fromJson(json);
		}	else if(type == (HomePageContentNewUser).toString()){
			return HomePageContentNewUser().fromJson(json);
		}	else if(type == (HomePageContentFloor1Pic).toString()){
			return HomePageContentFloor1Pic().fromJson(json);
		}	else if(type == (HomePageContentFloor2Pic).toString()){
			return HomePageContentFloor2Pic().fromJson(json);
		}	else if(type == (HomePageContentFloorName).toString()){
			return HomePageContentFloorName().fromJson(json);
		}	else if(type == (HomePageContentCategory).toString()){
			return HomePageContentCategory().fromJson(json);
		}	else if(type == (HomePageContentCategoryBxMallSubDto).toString()){
			return HomePageContentCategoryBxMallSubDto().fromJson(json);
		}	else if(type == (HomePageContentFloor3Pic).toString()){
			return HomePageContentFloor3Pic().fromJson(json);
		}	else if(type == (OnLaunchMiniEntity).toString()){
			return OnLaunchMiniEntity().fromJson(json);
		}	else if(type == (OnLaunchMiniSharePic).toString()){
			return OnLaunchMiniSharePic().fromJson(json);
		}	else if(type == (OnLaunchMiniSendFee).toString()){
			return OnLaunchMiniSendFee().fromJson(json);
		}	else if(type == (BasicPictureOrdersSumFsizeEntity).toString()){
			return BasicPictureOrdersSumFsizeEntity().fromJson(json);
		}	else if(type == (BaseBean).toString()){
			return BaseBean().fromJson(json);
		}	else if(type == (HomePageBelowContenEntity).toString()){
			return HomePageBelowContenEntity().fromJson(json);
		}	
		return null;
	}

  //list is returned by type
	static M _getListChildType<M>(List data) {
		if(<HomePageContentEntity>[] is M){
			return data.map<HomePageContentEntity>((e) => HomePageContentEntity().fromJson(e)).toList() as M;
		}	else if(<HomePageContentSlides>[] is M){
			return data.map<HomePageContentSlides>((e) => HomePageContentSlides().fromJson(e)).toList() as M;
		}	else if(<HomePageContentShopInfo>[] is M){
			return data.map<HomePageContentShopInfo>((e) => HomePageContentShopInfo().fromJson(e)).toList() as M;
		}	else if(<HomePageContentIntegralMallPic>[] is M){
			return data.map<HomePageContentIntegralMallPic>((e) => HomePageContentIntegralMallPic().fromJson(e)).toList() as M;
		}	else if(<HomePageContentToShareCode>[] is M){
			return data.map<HomePageContentToShareCode>((e) => HomePageContentToShareCode().fromJson(e)).toList() as M;
		}	else if(<HomePageContentRecommend>[] is M){
			return data.map<HomePageContentRecommend>((e) => HomePageContentRecommend().fromJson(e)).toList() as M;
		}	else if(<HomePageContentAdvertesPicture>[] is M){
			return data.map<HomePageContentAdvertesPicture>((e) => HomePageContentAdvertesPicture().fromJson(e)).toList() as M;
		}	else if(<HomePageContentFloor1>[] is M){
			return data.map<HomePageContentFloor1>((e) => HomePageContentFloor1().fromJson(e)).toList() as M;
		}	else if(<HomePageContentFloor2>[] is M){
			return data.map<HomePageContentFloor2>((e) => HomePageContentFloor2().fromJson(e)).toList() as M;
		}	else if(<HomePageContentFloor3>[] is M){
			return data.map<HomePageContentFloor3>((e) => HomePageContentFloor3().fromJson(e)).toList() as M;
		}	else if(<HomePageContentSaoma>[] is M){
			return data.map<HomePageContentSaoma>((e) => HomePageContentSaoma().fromJson(e)).toList() as M;
		}	else if(<HomePageContentNewUser>[] is M){
			return data.map<HomePageContentNewUser>((e) => HomePageContentNewUser().fromJson(e)).toList() as M;
		}	else if(<HomePageContentFloor1Pic>[] is M){
			return data.map<HomePageContentFloor1Pic>((e) => HomePageContentFloor1Pic().fromJson(e)).toList() as M;
		}	else if(<HomePageContentFloor2Pic>[] is M){
			return data.map<HomePageContentFloor2Pic>((e) => HomePageContentFloor2Pic().fromJson(e)).toList() as M;
		}	else if(<HomePageContentFloorName>[] is M){
			return data.map<HomePageContentFloorName>((e) => HomePageContentFloorName().fromJson(e)).toList() as M;
		}	else if(<HomePageContentCategory>[] is M){
			return data.map<HomePageContentCategory>((e) => HomePageContentCategory().fromJson(e)).toList() as M;
		}	else if(<HomePageContentCategoryBxMallSubDto>[] is M){
			return data.map<HomePageContentCategoryBxMallSubDto>((e) => HomePageContentCategoryBxMallSubDto().fromJson(e)).toList() as M;
		}	else if(<HomePageContentFloor3Pic>[] is M){
			return data.map<HomePageContentFloor3Pic>((e) => HomePageContentFloor3Pic().fromJson(e)).toList() as M;
		}	else if(<OnLaunchMiniEntity>[] is M){
			return data.map<OnLaunchMiniEntity>((e) => OnLaunchMiniEntity().fromJson(e)).toList() as M;
		}	else if(<OnLaunchMiniSharePic>[] is M){
			return data.map<OnLaunchMiniSharePic>((e) => OnLaunchMiniSharePic().fromJson(e)).toList() as M;
		}	else if(<OnLaunchMiniSendFee>[] is M){
			return data.map<OnLaunchMiniSendFee>((e) => OnLaunchMiniSendFee().fromJson(e)).toList() as M;
		}	else if(<BasicPictureOrdersSumFsizeEntity>[] is M){
			return data.map<BasicPictureOrdersSumFsizeEntity>((e) => BasicPictureOrdersSumFsizeEntity().fromJson(e)).toList() as M;
		}	else if(<BaseBean>[] is M){
			return data.map<BaseBean>((e) => BaseBean().fromJson(e)).toList() as M;
		}	else if(<HomePageBelowContenEntity>[] is M){
			return data.map<HomePageBelowContenEntity>((e) => HomePageBelowContenEntity().fromJson(e)).toList() as M;
		}
		throw Exception("not fond");
	}

  static M fromJsonAsT<M>(json) {
    if (json is List) {
      return _getListChildType<M>(json);
    } else {
      return _fromJsonSingle<M>(json) as M;
    }
  }
}